{"version":3,"sources":["components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodLIst","goods","map","good","goodsFromServer","SORT_GOODS_ALPHABET","SORT_GOODS_LENGTH","SORT_GOODS_REVERSE","App","useState","sortField","setSortField","query","setQuery","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,UCIbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SACpBC,EAAqB,UAiCpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EA7BR,SAA0Bb,EAA1B,GAAwD,IAArBS,EAAoB,EAApBA,UAAWE,EAAS,EAATA,MACtCG,EAAa,YAAOd,GAqB1B,OAnBIS,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMP,GAAaQ,EAAMR,GAElC,QACE,OAAO,MAKXE,GACFG,EAAcK,UAGTL,EAOcM,CACnBjB,EACA,CAAEM,YAAWE,UAGf,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYd,IAAcL,IAE5BoB,QAAS,kBAAMd,EAAaN,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYd,IAAcJ,IAE5BmB,QAAS,kBAAMd,EAAaL,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYZ,IAAUL,IAExBkB,QAAS,kBAAMZ,EACbD,IAAUL,EACN,GACAA,IARR,sBAcgB,KAAdG,GAA8B,KAAVE,IACpB,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPZ,EAAS,IACTF,EAAa,KALjB,sBAaJ,cAAC,EAAD,CAAUV,MAAOa,QChHvBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef409e66.chunk.js","sourcesContent":["export const GoodLIst = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport { GoodLIst } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_GOODS_ALPHABET = 'alphabet';\nconst SORT_GOODS_LENGTH = 'length';\nconst SORT_GOODS_REVERSE = 'reverse';\n\n// function setQuery(name) {\n//   const query = name;\n\n//   return query;\n// }\n\nfunction getPreparedGoods(goods, { sortField, query }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_GOODS_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_GOODS_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (query) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [query, setQuery] = useState('');\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, query },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_GOODS_ALPHABET,\n          })}\n          onClick={() => setSortField(SORT_GOODS_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_GOODS_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_GOODS_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': query !== SORT_GOODS_REVERSE,\n          })}\n          onClick={() => setQuery(\n            query === SORT_GOODS_REVERSE\n              ? ''\n              : SORT_GOODS_REVERSE,\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || query !== '') && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setQuery('');\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodLIst goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}